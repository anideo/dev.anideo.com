---
layout: post
title: Simple Windowing and Ranking on Postgres &ndash; Or a Behind-The-Scenes look at GitHeroes
---

<h1><a href="{{ page.url }}">{{ page.title }}</a></h1>

<p class="meta">19 Jan 2012 - Singapore</p>

<p>I'd written this down a while ago about an app that I thought would be cool - l33tornot.com. The concept is basically centered around voting for hackers you thought were l33t - the idea was to be completely harmless and meant out of curiosity as to whom people would vote for.</p>

<p>But there were complications - who was eligible? How would you handle duplicates ? How would you avoid election fraud - authenticating with Twitter, Facebook or something else? Also how do you handle the case where a larger-than-life character overshadows your personal hero based in tiny Singapore?</p>

<p>These problems put a dampener on my efforts but I was determined not to let this idea pass - and so on New Years' Eve (after much thought for the previous two days), I decided to re-incarnate the idea as <a href="http://githero.es">GitHeroes</a>.</p>

<h2>Premise</h2>

<p>The premise was simple:</p>

<ul>
  <li>Login using GitHub</li>
  <li>Nominate your personal hero (you could nominate as many as you want)</li>
  <li>Publicize your nomination so you could get fellow hackers to vote for them</li>
  <li>Put up a leaderboard so you could see how your hero was doing</li>
</ul>

<p>This re-incarnation of the app did away with problems of deciding "canonical" objects for hackers being nominated, election fraud and seemed a much more elegant app.</p>

<h2>Behind The Scenes</h2>

<p>The app was built using Rails 3.1, CoffeeScript, Twitter Bootstrap, PostgreSQL and is hosted on Heroku. It uses <a href="https://github.com/intridea/omniauth">Omniauth</a> for GitHub OAuth integration (Omniauth by the way is a fantastic library) and with a <a href="http://www.quora.com/What-font-is-used-in-the-Github-logo">little help from Quora</a>, I even found the GitHub font so that I could design a good-enough logo.</p>

<h3>Ranking using PostgreSQL</h3>

<p>The most interesting bit for me about GitHeroes is the way the ranking/leaderboard stuff is done. I contemplated using Redis to do ranking, but I am quite wary of introducing dependencies to a Rails stack unless it's absolutely necessary.</p>

<p>Turns out, it *is* unnecessary because Postgres (9.0 and above) provides with you <a href="http://www.postgresql.org/docs/9.1/static/tutorial-window.html">window functions</a> which let you run calculations across a set of rows in a table. You can choose to group similar rows together, but they also work across the entire table.</p>

<p>*Sidenote*: Postgres 9.0 is not available on the shared database plans available on <a href="http://heroku.com">Heroku</a> so you will need to provision your own or upgrade to the paid plans.</p>

<p>How voting is designed is quite simple, here is the class:</p>

<script src="https://gist.github.com/1638263.js?file=vote.rb"></script>

<p>As you may notice, there is a counter-cache for the hero being voted for and the <code>votes_received</code> is incremented on Hero every time a vote is cast.</p>

<p>The <code>votes_received</code> column is then used as the column to rank while choosing heroes for the leaderboard.</p>

<p>This is the function used in the <code>Hero</code> class to get the top 20 heroes ranked by votes across all locations:</p>

<script src="https://gist.github.com/1638263.js?file=global_leaderboard.rb"></script>

<p>...and this is the function used to get the top 20 hereoes by votes in a given location:</p>

<script src="https://gist.github.com/1638263.js?file=leaderboard_by_location.rb"></script>

<p>Note: You will need to add a descending order index on votes_received, since by default btree indexes on Postgres use the ascending order:</p>

<p><code>CREATE INDEX desc_votes_recvd_idx on heros(votes_received DESC NULLS LAST);</code></p>

<p>As you can see from the query plan below, the query is quite efficient and works like a charm: (although I probably should run benchmarks against a larger table)</p>

<script src="https://gist.github.com/1638263.js?file=query_plan_for_global_leaderboard.sql"></script>

<h2>Conclusion</h2>

<p>GitHeroes was a fun little project that took two days to build and got to the front page of <a href="http://news.ycombinator.com/item?id=3415938">Hacker News</a>. But it also gave me a chance to explore some neat Postgres features which will be useful for the other app that we are building - <a href="http://getdenso.com">Denso</a>.</p>